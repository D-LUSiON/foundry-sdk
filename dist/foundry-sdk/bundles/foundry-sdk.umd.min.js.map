{"version":3,"sources":["ng://foundry-sdk/lib/tools/resizer-events.service.ts","ng://foundry-sdk/lib/components/workspace-zone/workspace-zone.component.ts","ng://foundry-sdk/lib/components/workspace-wrapper/workspace-wrapper.component.ts","ng://foundry-sdk/lib/foundry-sdk.module.ts","ng://foundry-sdk/lib/models/navigation-element.ts"],"names":["ResizerEventsService","this","emitter","EventEmitter","Injectable","args","providedIn","WorkspaceZoneComponent","_el","_renderer","_resizeService","_this","theme","overflow_x","overflow_y","min_height","max_height","direction","resizers","resizer_width","host_min_height","host_max_height","host_overfow_x","host_overfow_y","host_flex_direction","host_color_theme","all_resizers","subscribe","e","zone","role","forEach","resizer","_updateResizerPosition","prototype","onMouseEnter","Object","keys","removeClass","addClass","onMouseLeave","relatedTarget","getAttribute","ngOnInit","setStyle","nativeElement","border","console","error","resizer_el","createElement","setAttribute","_addMouseDragListeners","appendChild","document","querySelector","ngOnChanges","changes","ngAfterViewInit","position_info","getBoundingClientRect","width","y","x","height","top","left","bottom","resize","listen","win_mousemove_fn","window","event","includes","pageY","pageX","emit","handle","handle_width","element_position","win_dragstart_fn","preventDefault","stopPropagation","win_mouseup_fn","Component","selector","template","ElementRef","Renderer2","Input","HostBinding","HostListener","WorkspaceWrapperComponent","rows","columns","areas","padding","restore_state","_rows_initial","_cols_initial","host_theme_class","idx_1","area_row","findIndex","area","outerWidth","_setAreasStyle","idx_2","i","localStorage","getItem","JSON","parse","join","map","setItem","stringify","FoundrySdkModule","NgModule","declarations","imports","exports","NavigationElement","data","hasOwnProperty","title","icon","action","children"],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResizerEventsService {\n\n    emitter: EventEmitter<{\n        zone: string,\n        resize: 'h' | 'v',\n        handle: 'top' | 'right' | 'bottom' | 'left',\n        handle_width: number,\n        event: MouseEvent,\n        element_position: DOMRect,\n        resizer_width: number,\n    }> = new EventEmitter();\n\n    constructor() { }\n}\n","import {\n    Component,\n    OnInit,\n    ElementRef,\n    Renderer2,\n    Input,\n    HostBinding,\n    AfterViewInit,\n    HostListener,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ResizerEventsService } from '../../tools/resizer-events.service';\n\n@Component({\n  selector: 'fnd-workspace-zone',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./workspace-zone.component.scss']\n})\nexport class WorkspaceZoneComponent implements OnInit, OnChanges, AfterViewInit {\n\n    @Input() role: string;\n    @Input() border: string;\n    @Input() resize_zone: string;\n    @Input() theme: string = '';\n    @Input() overflow_x: 'visible' | 'auto' | 'none' | 'scroll' | 'initial' | 'clip' | 'overlay' = 'clip';\n    @Input() overflow_y: 'visible' | 'auto' | 'none' | 'scroll' | 'initial' | 'clip' | 'overlay' = 'clip';\n    @Input() min_height: string = '0';\n    @Input() max_height: string = 'auto';\n    @Input() direction: 'row' | 'column' = 'column';\n    @Input() resizers: Array<'top' | 'right' | 'bottom' | 'left'> = [];\n    @Input() resizer_width: number = 6;\n\n    @HostBinding('style.min-height') host_min_height = this.min_height;\n    @HostBinding('style.max-height') host_max_height = this.max_height;\n    @HostBinding('style.overflow-x') host_overfow_x = this.overflow_x;\n    @HostBinding('style.overflow-y') host_overfow_y = this.overflow_y;\n    @HostBinding('style.flex-direction') host_flex_direction = this.direction;\n    @HostBinding('attr.colorTheme') host_color_theme = this.theme;\n\n\n    private _resizer_element: HTMLDivElement;\n\n    all_resizers: { [key: string]: HTMLDivElement } = {};\n\n    @HostListener('mouseenter', ['$event']) onMouseEnter(e: MouseEvent) {\n        Object.keys(this.all_resizers).forEach(resizer => {\n            this._renderer.removeClass(this.all_resizers[resizer], 'resizer-handle-hidden');\n            this._renderer.addClass(this.all_resizers[resizer], 'resizer-handle-visible');\n        });\n    }\n\n    @HostListener('mouseleave', ['$event']) onMouseLeave(e: MouseEvent) {\n        if (!e.relatedTarget || (e.relatedTarget as HTMLDivElement).getAttribute('zone') !== this.role) {\n            Object.keys(this.all_resizers).forEach(resizer => {\n                this._renderer.removeClass(this.all_resizers[resizer], 'resizer-handle-visible');\n                this._renderer.addClass(this.all_resizers[resizer], 'resizer-handle-hidden');\n            });\n        }\n    }\n\n    constructor(\n        private _el: ElementRef,\n        private _renderer: Renderer2,\n        private _resizeService: ResizerEventsService,\n    ) {\n        this._resizeService.emitter.subscribe((e: { zone: string, event: MouseEvent }) => {\n            if (e.zone !== this.role) {\n                this.resizers.forEach(resizer => {\n                    this._updateResizerPosition(this.all_resizers[resizer]);\n                });\n            }\n        });\n    }\n\n    ngOnInit() {\n        this._renderer.setStyle(this._el.nativeElement, 'grid-area', this.role);\n        if (this.border) {\n            this._renderer.setStyle(this._el.nativeElement, `border-${this.border}-width`, '1px');\n        }\n\n        this.resizers.forEach(resizer => {\n            if (!this.all_resizers[resizer]) {\n                const resizer_el: HTMLDivElement = this._renderer.createElement('div');\n                this._renderer.setAttribute(resizer_el, 'zone', this.role);\n                this._renderer.setAttribute(resizer_el, 'role', resizer);\n                this._renderer.addClass(resizer_el, 'resizer-handle');\n                this._renderer.addClass(resizer_el, 'resizer-handle-hidden');\n\n                switch (resizer) {\n                    case 'top':\n                    case 'bottom':\n                        this._renderer.setStyle(resizer_el, 'cursor', 'n-resize');\n                        break;\n                    case 'right':\n                    case 'left':\n                        this._renderer.setStyle(resizer_el, 'cursor', 'e-resize');\n                        break;\n                    default:\n                        break;\n                }\n\n                this._updateResizerPosition(resizer_el);\n\n                this._addMouseDragListeners(resizer_el, resizer);\n                this._renderer.appendChild(document.querySelector('body'), resizer_el);\n                this.all_resizers[resizer] = resizer_el;\n            } else {\n                console.error(`You've defined more than one \"${resizer}\" resizers!`);\n            }\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.host_color_theme = this.theme;\n        this.host_min_height = this.min_height;\n        this.host_max_height = this.max_height;\n        this.host_overfow_x = this.overflow_x;\n        this.host_overfow_y = this.overflow_y;\n        this.host_flex_direction = this.direction;\n    }\n\n    ngAfterViewInit(): void {\n        this.host_color_theme = this.theme;\n        this.host_min_height = this.min_height;\n        this.host_max_height = this.max_height;\n        this.host_overfow_x = this.overflow_x;\n        this.host_overfow_y = this.overflow_y;\n        this.host_flex_direction = this.direction;\n    }\n\n    private _updateResizerPosition(resizer_el: HTMLDivElement): void {\n        const position_info: DOMRect = this._el.nativeElement.getBoundingClientRect();\n        const resizer = resizer_el.getAttribute('role');\n\n        switch (resizer) {\n            case 'top':\n                this._renderer.setStyle(resizer_el, 'width', `${position_info.width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.y - (this.resizer_width / 2)}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.x}px`);\n                break;\n            case 'right':\n                this._renderer.setStyle(resizer_el, 'width', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${position_info.height}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.top}px`);\n                this._renderer.setStyle(\n                    resizer_el,\n                    'left',\n                    `${position_info.width + position_info.left - this.resizer_width + (this.resizer_width / 2)}px`\n                );\n                break;\n            case 'bottom':\n                // TODO: Fix resizer\n                this._renderer.setStyle(resizer_el, 'width', `${position_info.width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.bottom - this.resizer_width + (this.resizer_width / 2)}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.x}px`);\n                break;\n            case 'left':\n                this._renderer.setStyle(resizer_el, 'width', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${position_info.height}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.top}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.left - (this.resizer_width / 2)}px`);\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _addMouseDragListeners(resizer_el: HTMLDivElement, resize: 'top' | 'right' | 'bottom' | 'left'): void {\n        this._renderer.listen(resizer_el, 'mouseenter', (e: MouseEvent) => {\n            this._renderer.removeClass(resizer_el, 'resizer-handle-hidden');\n            this._renderer.addClass(resizer_el, 'resizer-handle-visible');\n        });\n\n        this._renderer.listen(resizer_el, 'mouseleave', (e: MouseEvent) => {\n            if (!e.relatedTarget || (e.relatedTarget as HTMLElement).getAttribute('role') !== this.role) {\n                this._renderer.removeClass(resizer_el, 'resizer-handle-visible');\n                this._renderer.addClass(resizer_el, 'resizer-handle-hidden');\n            }\n        });\n\n        this._renderer.listen(resizer_el, 'mousedown', (e: MouseEvent) => {\n            this._renderer.setStyle(document.querySelector('body'), 'user-select', 'none');\n            const win_mousemove_fn = this._renderer.listen(window, 'mousemove', (event: MouseEvent) => {\n                if (['top', 'bottom'].includes(resize)) {\n                    this._renderer.setStyle(resizer_el, 'top', `${event.pageY}px`);\n                } else {\n                    this._renderer.setStyle(resizer_el, 'left', `${event.pageX}px`);\n                }\n                this._resizeService.emitter.emit({\n                    zone: this.role,\n                    resize: ['top', 'bottom'].includes(resize) ? 'v' : 'h',\n                    handle: resize,\n                    handle_width: this.resizer_width,\n                    event,\n                    element_position: this._el.nativeElement.getBoundingClientRect(),\n                    resizer_width: this.resizer_width,\n                });\n            });\n            const win_dragstart_fn = this._renderer.listen(window, 'dragstart', (event: MouseEvent) => {\n                event.preventDefault();\n                event.stopPropagation();\n                return false;\n            });\n            const win_mouseup_fn = this._renderer.listen(window, 'mouseup', (event: MouseEvent) => {\n                this._renderer.setStyle(document.querySelector('body'), 'user-select', 'unset');\n                win_mousemove_fn();\n                win_dragstart_fn();\n                win_mouseup_fn();\n            });\n        });\n    }\n\n}\n","import { Component, OnInit, Input, ElementRef, Renderer2, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizerEventsService } from '../../tools/resizer-events.service';\n\n@Component({\n    selector: 'fnd-workspace-wrapper',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./workspace-wrapper.component.scss']\n})\nexport class WorkspaceWrapperComponent implements OnInit, OnChanges {\n\n    @Input() rows: Array<string> = [];\n    @Input() columns: Array<string> = [];\n    @Input() areas: Array<Array<string>> = [];\n    @Input() padding: string = '';\n    @Input() theme: string = 'light';\n    @Input() restore_state: boolean = true;\n\n    private _rows_initial: Array<string> = [];\n    private _cols_initial: Array<string> = [];\n\n    @HostBinding('class') host_theme_class = `workspace-theme-${this.theme}`;\n\n    constructor(\n        private _el: ElementRef,\n        private _renderer: Renderer2,\n        private _resizeService: ResizerEventsService,\n    ) {\n        this._resizeService.emitter.subscribe((e: {\n            zone: string,\n            resize: 'h' | 'v',\n            handle: 'top' | 'right' | 'bottom' | 'left',\n            handle_width: number,\n            event: MouseEvent,\n            element_position: DOMRect,\n        }) => {\n            if (e.resize === 'h') {\n                let idx = -1;\n                this.areas.forEach(area_row => {\n                    if (idx === -1) {\n                        idx = area_row.findIndex(area => area === e.zone);\n                    }\n                });\n                if (e.handle === 'right') {\n                    this.columns[idx] = `${e.event.pageX - e.element_position.left + e.handle_width}px`;\n                } else if (e.handle === 'left') {\n                    this.columns[idx] = `${window.outerWidth - e.event.pageX}px`;\n                }\n                this._setAreasStyle();\n            } else if (e.resize === 'v') {\n                let idx = -1;\n                this.areas.forEach((area_row, i) => {\n                    if (area_row.includes(e.zone)) {\n                        idx = i;\n                    }\n                });\n\n                if (e.handle === 'top') {\n                    this.rows[idx] = `${e.element_position.bottom - e.event.pageY}px`;\n                } else if (e.handle === 'bottom') {\n                    this.rows[idx] = `${e.event.pageY + e.handle_width}px`;\n                }\n                this._setAreasStyle();\n            }\n        });\n    }\n\n    ngOnInit() {\n        if (this.restore_state) {\n            this._rows_initial = this.rows;\n            this._cols_initial = this.columns;\n            if (localStorage.getItem('wrapper:rows')) {\n                this.rows = JSON.parse(localStorage.getItem('wrapper:rows'));\n            }\n            if (localStorage.getItem('wrapper:columns')) {\n                this.columns = JSON.parse(localStorage.getItem('wrapper:columns'));\n            }\n        }\n        this._setAreasStyle();\n        this._renderer.addClass(document.querySelector('body'), `workspace-theme-${this.theme}`);\n        this._renderer.setAttribute(document.querySelector('body'), 'colorTheme', this.theme);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.host_theme_class = `workspace-theme-${this.theme}`;\n        this._renderer.addClass(document.querySelector('body'), `workspace-theme-${this.theme}`);\n        this._renderer.setAttribute(document.querySelector('body'), 'colorTheme', this.theme);\n        if (this.restore_state) {\n            this._rows_initial = this.rows;\n            this._cols_initial = this.columns;\n            if (localStorage.getItem('wrapper:rows')) {\n                this.rows = JSON.parse(localStorage.getItem('wrapper:rows'));\n            }\n            if (localStorage.getItem('wrapper:columns')) {\n                this.columns = JSON.parse(localStorage.getItem('wrapper:columns'));\n            }\n        }\n        this._setAreasStyle();\n    }\n\n    private _setAreasStyle() {\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-rows', this.rows.join(' '));\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-columns', this.columns.join(' '));\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-areas', this.areas.map(x => `\"${x.join(' ')}\"`).join(' '));\n\n        if (this.restore_state) {\n            localStorage.setItem('wrapper:rows', JSON.stringify(this.rows));\n            localStorage.setItem('wrapper:columns', JSON.stringify(this.columns));\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { WorkspaceZoneComponent } from './components/workspace-zone/workspace-zone.component';\nimport { WorkspaceWrapperComponent } from './components/workspace-wrapper/workspace-wrapper.component';\n\n\n@NgModule({\n    declarations: [\n        WorkspaceZoneComponent,\n        WorkspaceWrapperComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        WorkspaceZoneComponent,\n        WorkspaceWrapperComponent,\n    ]\n})\nexport class FoundrySdkModule { }\n","export class NavigationElement {\n    title?: string;\n    icon?: string;\n    action?: any;\n    role?: 'divider';\n    children?: NavigationElement[];\n\n    constructor(data?) {\n        if (data) {\n            if (data.hasOwnProperty('title')) { this.title = data.title; }\n            if (data.hasOwnProperty('icon')) { this.icon = data.icon; }\n            if (data.hasOwnProperty('action')) { this.action = data.action; }\n            if (data.hasOwnProperty('role')) { this.role = data.role; }\n            if (data.hasOwnProperty('children')) { this.children = data.children.map(x => new NavigationElement(x)); }\n        }\n    }\n}\n"]}