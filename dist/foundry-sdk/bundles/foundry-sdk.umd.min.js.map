{"version":3,"sources":["ng://foundry-sdk/lib/tools/resizer-events.service.ts","ng://foundry-sdk/lib/components/workspace-zone/workspace-zone.component.ts","ng://foundry-sdk/lib/components/workspace-wrapper/workspace-wrapper.component.ts","ng://foundry-sdk/lib/foundry-sdk.module.ts","ng://foundry-sdk/lib/models/navigation-element.ts"],"names":["ResizerEventsService","this","emitter","EventEmitter","Injectable","args","providedIn","WorkspaceZoneComponent","_el","_renderer","_resizeService","_this","theme","overflow_x","overflow_y","min_height","max_height","direction","resizers","resizer_width","host_min_height","host_max_height","host_overfow_x","host_overfow_y","host_flex_direction","host_color_theme","all_resizers","subscribe","e","zone","role","forEach","resizer","_updateResizerPosition","prototype","onMouseEnter","Object","keys","removeClass","addClass","onMouseLeave","relatedTarget","getAttribute","onResize","event","setTimeout","ngOnInit","setStyle","nativeElement","border","console","error","resizer_el","createElement","setAttribute","_addMouseDragListeners","appendChild","document","querySelector","ngOnChanges","changes","ngAfterViewInit","position_info","getBoundingClientRect","width","y","x","height","top","left","bottom","resize","listen","win_mousemove_fn","window","pageY","pageX","emit","includes","handle","handle_width","element_position","resizer_position","win_dragstart_fn","preventDefault","stopPropagation","win_mouseup_fn","Component","selector","template","ElementRef","Renderer2","Input","HostBinding","HostListener","WorkspaceWrapperComponent","rows","columns","areas","padding","restore_state","_rows_initial","_cols_initial","idx_1","area_row","findIndex","area","innerWidth","_setAreasStyle","idx_2","i","log","localStorage","getItem","JSON","parse","join","map","setItem","stringify","FoundrySdkModule","NgModule","declarations","imports","exports","NavigationElement","data","hasOwnProperty","title","icon","action","children"],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\nexport interface ResizeEvent {\n    zone: string;\n    resize: 'h' | 'v';\n    handle: 'top' | 'right' | 'bottom' | 'left';\n    handle_width: number;\n    event: MouseEvent;\n    element_position: DOMRect | ClientRect;\n    resizer_position: DOMRect | ClientRect;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResizerEventsService {\n\n    emitter: EventEmitter<ResizeEvent> = new EventEmitter();\n\n    constructor() { }\n}\n","import {\n    Component,\n    OnInit,\n    ElementRef,\n    Renderer2,\n    Input,\n    HostBinding,\n    AfterViewInit,\n    HostListener,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ResizerEventsService, ResizeEvent } from '../../tools/resizer-events.service';\n\n@Component({\n    selector: 'fnd-workspace-zone',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./workspace-zone.component.scss']\n})\nexport class WorkspaceZoneComponent implements OnInit, OnChanges, AfterViewInit {\n\n    @Input() role: string;\n    @Input() border: string;\n    @Input() resize_zone: string;\n    @Input() theme: string = '';\n    @Input() overflow_x: 'visible' | 'auto' | 'none' | 'scroll' | 'initial' | 'clip' | 'overlay' = 'clip';\n    @Input() overflow_y: 'visible' | 'auto' | 'none' | 'scroll' | 'initial' | 'clip' | 'overlay' = 'clip';\n    @Input() min_height: string = '0';\n    @Input() max_height: string = 'auto';\n    @Input() direction: 'row' | 'column' = 'column';\n    @Input() resizers: Array<'top' | 'right' | 'bottom' | 'left'> = [];\n    @Input() resizer_width: number = 6;\n\n    @HostBinding('style.min-height') host_min_height = this.min_height;\n    @HostBinding('style.max-height') host_max_height = this.max_height;\n    @HostBinding('style.overflow-x') host_overfow_x = this.overflow_x;\n    @HostBinding('style.overflow-y') host_overfow_y = this.overflow_y;\n    @HostBinding('style.flex-direction') host_flex_direction = this.direction;\n    @HostBinding('attr.colorTheme') host_color_theme = this.theme;\n\n\n    private _resizer_element: HTMLDivElement;\n\n    all_resizers: { [key: string]: HTMLDivElement } = {};\n\n    @HostListener('mouseenter', ['$event']) onMouseEnter(e: MouseEvent) {\n        Object.keys(this.all_resizers).forEach(resizer => {\n            this._renderer.removeClass(this.all_resizers[resizer], 'resizer-handle-hidden');\n            this._renderer.addClass(this.all_resizers[resizer], 'resizer-handle-visible');\n        });\n    }\n\n    @HostListener('mouseleave', ['$event']) onMouseLeave(e: MouseEvent) {\n        if (!e.relatedTarget || (e.relatedTarget as HTMLDivElement).getAttribute('zone') !== this.role) {\n            Object.keys(this.all_resizers).forEach(resizer => {\n                this._renderer.removeClass(this.all_resizers[resizer], 'resizer-handle-visible');\n                this._renderer.addClass(this.all_resizers[resizer], 'resizer-handle-hidden');\n            });\n        }\n    }\n\n    @HostListener('window:resize', ['$event']) onResize(event) {\n        setTimeout(() => {\n            this.resizers.forEach(resizer => {\n                this._updateResizerPosition(this.all_resizers[resizer]);\n            });\n        }, 200);\n    }\n\n    constructor(\n        private _el: ElementRef,\n        private _renderer: Renderer2,\n        private _resizeService: ResizerEventsService,\n    ) {\n        this._resizeService.emitter.subscribe((e: { zone: string, event: MouseEvent }) => {\n            if (e.zone !== this.role) {\n                this.resizers.forEach(resizer => {\n                    this._updateResizerPosition(this.all_resizers[resizer]);\n                });\n            }\n        });\n    }\n\n    ngOnInit() {\n        this._renderer.setStyle(this._el.nativeElement, 'grid-area', this.role);\n        if (this.border) {\n            this._renderer.setStyle(this._el.nativeElement, `border-${this.border}-width`, '1px');\n        }\n\n        this.resizers.forEach(resizer => {\n            if (!this.all_resizers[resizer]) {\n                const resizer_el: HTMLDivElement = this._renderer.createElement('div');\n                this._renderer.setAttribute(resizer_el, 'zone', this.role);\n                this._renderer.setAttribute(resizer_el, 'role', resizer);\n                this._renderer.addClass(resizer_el, 'resizer-handle');\n                this._renderer.addClass(resizer_el, 'resizer-handle-hidden');\n\n                switch (resizer) {\n                    case 'top':\n                    case 'bottom':\n                        this._renderer.setStyle(resizer_el, 'cursor', 'n-resize');\n                        break;\n                    case 'right':\n                    case 'left':\n                        this._renderer.setStyle(resizer_el, 'cursor', 'e-resize');\n                        break;\n                    default:\n                        break;\n                }\n\n                this._updateResizerPosition(resizer_el);\n\n                this._addMouseDragListeners(resizer_el, resizer);\n                this._renderer.appendChild(document.querySelector('body'), resizer_el);\n                this.all_resizers[resizer] = resizer_el;\n            } else {\n                console.error(`You've defined more than one \"${resizer}\" resizers!`);\n            }\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.host_color_theme = this.theme;\n        this.host_min_height = this.min_height;\n        this.host_max_height = this.max_height;\n        this.host_overfow_x = this.overflow_x;\n        this.host_overfow_y = this.overflow_y;\n        this.host_flex_direction = this.direction;\n    }\n\n    ngAfterViewInit(): void {\n        this.host_color_theme = this.theme;\n        this.host_min_height = this.min_height;\n        this.host_max_height = this.max_height;\n        this.host_overfow_x = this.overflow_x;\n        this.host_overfow_y = this.overflow_y;\n        this.host_flex_direction = this.direction;\n    }\n\n    private _updateResizerPosition(resizer_el: HTMLDivElement): void {\n        const position_info: DOMRect = this._el.nativeElement.getBoundingClientRect();\n        const resizer = resizer_el.getAttribute('role');\n\n        this._renderer.setStyle(resizer_el, 'overflow', `hidden`);\n        setTimeout(() => {\n            this._renderer.setStyle(resizer_el, 'overflow', `auto`);\n        }, 3);\n        switch (resizer) {\n            case 'top':\n                this._renderer.setStyle(resizer_el, 'width', `${position_info.width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.y - (this.resizer_width / 2)}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.x}px`);\n                break;\n            case 'right':\n                this._renderer.setStyle(resizer_el, 'width', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${position_info.height}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.top}px`);\n                this._renderer.setStyle(\n                    resizer_el,\n                    'left',\n                    `${position_info.width + position_info.left - this.resizer_width + (this.resizer_width / 2)}px`\n                );\n                break;\n            case 'bottom':\n                this._renderer.setStyle(resizer_el, 'width', `${position_info.width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.bottom - this.resizer_width + (this.resizer_width / 2)}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.x}px`);\n                break;\n            case 'left':\n                this._renderer.setStyle(resizer_el, 'width', `${this.resizer_width}px`);\n                this._renderer.setStyle(resizer_el, 'height', `${position_info.height}px`);\n                this._renderer.setStyle(resizer_el, 'top', `${position_info.top}px`);\n                this._renderer.setStyle(resizer_el, 'left', `${position_info.left - (this.resizer_width / 2)}px`);\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _addMouseDragListeners(resizer_el: HTMLDivElement, resize: 'top' | 'right' | 'bottom' | 'left'): void {\n        this._renderer.listen(resizer_el, 'mouseenter', (e: MouseEvent) => {\n            this._renderer.removeClass(resizer_el, 'resizer-handle-hidden');\n            this._renderer.addClass(resizer_el, 'resizer-handle-visible');\n        });\n\n        this._renderer.listen(resizer_el, 'mouseleave', (e: MouseEvent) => {\n            if (!e.relatedTarget || (e.relatedTarget as HTMLElement).getAttribute('role') !== this.role) {\n                this._renderer.removeClass(resizer_el, 'resizer-handle-visible');\n                this._renderer.addClass(resizer_el, 'resizer-handle-hidden');\n            }\n        });\n\n        this._renderer.listen(resizer_el, 'mousedown', (e: MouseEvent) => {\n            this._renderer.setStyle(document.querySelector('body'), 'user-select', 'none');\n            const win_mousemove_fn = this._renderer.listen(window, 'mousemove', (event: MouseEvent) => {\n                switch (resize) {\n                    case 'top':\n                        this._renderer.setStyle(resizer_el, 'top', `${event.pageY}px`);\n                        break;\n                    case 'right':\n                        this._renderer.setStyle(resizer_el, 'left', `${event.pageX + this.resizer_width}px`);\n                        break;\n                    case 'bottom':\n                        // TODO: Fix bottom resizer\n                        this._renderer.setStyle(resizer_el, 'top', `${event.pageY}px`);\n                        break;\n                    case 'left':\n                        this._renderer.setStyle(resizer_el, 'left', `${event.pageX - (this.resizer_width / 2)}px`);\n                        break;\n                }\n\n                this._resizeService.emitter.emit({\n                    zone: this.role,\n                    resize: ['top', 'bottom'].includes(resize) ? 'v' : 'h',\n                    handle: resize,\n                    handle_width: this.resizer_width,\n                    event,\n                    element_position: this._el.nativeElement.getBoundingClientRect(),\n                    resizer_position: resizer_el.getBoundingClientRect(),\n                } as ResizeEvent);\n            });\n            const win_dragstart_fn = this._renderer.listen(window, 'dragstart', (event: MouseEvent) => {\n                event.preventDefault();\n                event.stopPropagation();\n                return false;\n            });\n            const win_mouseup_fn = this._renderer.listen(window, 'mouseup', (event: MouseEvent) => {\n                this._renderer.setStyle(document.querySelector('body'), 'user-select', 'unset');\n                win_mousemove_fn();\n                win_dragstart_fn();\n                win_mouseup_fn();\n            });\n        });\n    }\n\n}\n","import { Component, OnInit, Input, ElementRef, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizerEventsService, ResizeEvent } from '../../tools/resizer-events.service';\n\n@Component({\n    selector: 'fnd-workspace-wrapper',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./workspace-wrapper.component.scss']\n})\nexport class WorkspaceWrapperComponent implements OnInit, OnChanges {\n\n    @Input() rows: Array<string> = [];\n    @Input() columns: Array<string> = [];\n    @Input() areas: Array<Array<string>> = [];\n    @Input() padding: string = '';\n    @Input() theme: string = 'light';\n    @Input() restore_state: boolean = true;\n\n    private _rows_initial: Array<string> = [];\n    private _cols_initial: Array<string> = [];\n\n\n    constructor(\n        private _el: ElementRef,\n        private _renderer: Renderer2,\n        private _resizeService: ResizerEventsService,\n    ) {\n        this._resizeService.emitter.subscribe((e: ResizeEvent) => {\n            if (e.resize === 'h') {\n                let idx = -1;\n                this.areas.forEach(area_row => {\n                    if (idx === -1) {\n                        idx = area_row.findIndex(area => area === e.zone);\n                    }\n                });\n                if (e.handle === 'right') {\n                    this.columns[idx] = `${e.event.pageX - e.element_position.left + e.handle_width}px`;\n                } else if (e.handle === 'left') {\n                    this.columns[idx] = `${window.innerWidth - e.event.pageX + (e.handle_width / 2)}px`;\n                }\n                this._setAreasStyle();\n            } else if (e.resize === 'v') {\n                let idx = -1;\n                this.areas.forEach((area_row, i) => {\n                    if (area_row.includes(e.zone)) {\n                        idx = i;\n                    }\n                });\n\n                if (e.handle === 'top') {\n                    this.rows[idx] = `${e.element_position.bottom - e.event.pageY}px`;\n                } else if (e.handle === 'bottom') {\n                    console.log(`e.resizer_position.top: ${e.resizer_position.top}: e.element_position.bottom: ${e.element_position.bottom}`);\n\n                    this.rows[idx] = `${(e.resizer_position.top - e.element_position.top) + (e.handle_width / 2)}px`;\n                }\n                this._setAreasStyle();\n            }\n        });\n    }\n\n    ngOnInit() {\n        if (this.restore_state) {\n            this._rows_initial = this.rows;\n            this._cols_initial = this.columns;\n            if (localStorage.getItem('wrapper:rows')) {\n                this.rows = JSON.parse(localStorage.getItem('wrapper:rows'));\n            }\n            if (localStorage.getItem('wrapper:columns')) {\n                this.columns = JSON.parse(localStorage.getItem('wrapper:columns'));\n            }\n        }\n        this._setAreasStyle();\n        this._renderer.setAttribute(document.querySelector('body'), 'colorTheme', this.theme);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this._renderer.setAttribute(document.querySelector('body'), 'colorTheme', this.theme);\n        if (this.restore_state) {\n            this._rows_initial = this.rows;\n            this._cols_initial = this.columns;\n            if (localStorage.getItem('wrapper:rows')) {\n                this.rows = JSON.parse(localStorage.getItem('wrapper:rows'));\n            }\n            if (localStorage.getItem('wrapper:columns')) {\n                this.columns = JSON.parse(localStorage.getItem('wrapper:columns'));\n            }\n        }\n        this._setAreasStyle();\n    }\n\n    private _setAreasStyle() {\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-rows', this.rows.join(' '));\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-columns', this.columns.join(' '));\n        this._renderer.setStyle(this._el.nativeElement, 'grid-template-areas', this.areas.map(x => `\"${x.join(' ')}\"`).join(' '));\n\n        if (this.restore_state) {\n            localStorage.setItem('wrapper:rows', JSON.stringify(this.rows));\n            localStorage.setItem('wrapper:columns', JSON.stringify(this.columns));\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { WorkspaceZoneComponent } from './components/workspace-zone/workspace-zone.component';\nimport { WorkspaceWrapperComponent } from './components/workspace-wrapper/workspace-wrapper.component';\n\n\n@NgModule({\n    declarations: [\n        WorkspaceZoneComponent,\n        WorkspaceWrapperComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        WorkspaceZoneComponent,\n        WorkspaceWrapperComponent,\n    ]\n})\nexport class FoundrySdkModule { }\n","export class NavigationElement {\n    title?: string;\n    icon?: string;\n    action?: any;\n    role?: 'divider';\n    children?: NavigationElement[];\n\n    constructor(data?) {\n        if (data) {\n            if (data.hasOwnProperty('title')) { this.title = data.title; }\n            if (data.hasOwnProperty('icon')) { this.icon = data.icon; }\n            if (data.hasOwnProperty('action')) { this.action = data.action; }\n            if (data.hasOwnProperty('role')) { this.role = data.role; }\n            if (data.hasOwnProperty('children')) { this.children = data.children.map(x => new NavigationElement(x)); }\n        }\n    }\n}\n"]}